use llm_sdk::{Message, ModelResponse, Part, PartialModelResponse};
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AgentRequest<TCtx> {
    /// The input messages to the agent.
    pub messages: Vec<Message>,
    /// The context to be used during tool calling and building system
    /// instructions
    pub context: TCtx,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AgentResponse {
    /// The full chain of messages, including both input messages and messages
    /// generated during the agent's execution.
    pub messages: Vec<Message>,

    /// The output content generated by the agent.
    pub content: Vec<Part>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(tag = "type", rename_all = "kebab-case")]
pub enum AgentStreamResult {
    PartialModelResponse(PartialModelResponse),
    ModelResponse(ModelResponse),
    Response(AgentResponse),
}
