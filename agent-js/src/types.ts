import type {
  Message,
  ModelResponse,
  Part,
  PartialModelResponse,
} from "@hoangvvo/llm-sdk";

export interface AgentRequest<TContext> {
  /**
   * The input messages to the agent.
   */
  messages: Message[];
  /**
   * The context to be used during tool calling and building system
   */
  context: TContext;
}

export interface AgentResponse {
  /**
   * The full chain of messages, including both input messages and messages
   * generated during the agent's execution.
   */
  messages: Message[];

  /**
   * The output content generated by the agent.
   */
  content: Part[];
}

export interface AgentStreamEventPartialModelResponse
  extends PartialModelResponse {
  type: "partial-model-response";
}

export interface AgentStreamEventModelResponse extends ModelResponse {
  type: "model-response";
}

export interface AgentStreamEventResponse extends AgentResponse {
  type: "response";
}

export type AgentStreamEvent =
  | AgentStreamEventPartialModelResponse
  | AgentStreamEventModelResponse
  | AgentStreamEventResponse;
